// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: msgs.proto

package msgspb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// RecordingType enum for the available recording modes
type RecordingType int32

const (
	RecordingType_RECORDING_TYPE_UNSPECIFIED          RecordingType = 0
	RecordingType_RECORDING_TYPE_OFF                  RecordingType = 1
	RecordingType_RECORDING_TYPE_CONTINUOUS           RecordingType = 2
	RecordingType_RECORDING_TYPE_CONTINUOUS_SCHEDULED RecordingType = 3
	RecordingType_RECORDING_TYPE_MOTION               RecordingType = 4
)

// Enum value maps for RecordingType.
var (
	RecordingType_name = map[int32]string{
		0: "RECORDING_TYPE_UNSPECIFIED",
		1: "RECORDING_TYPE_OFF",
		2: "RECORDING_TYPE_CONTINUOUS",
		3: "RECORDING_TYPE_CONTINUOUS_SCHEDULED",
		4: "RECORDING_TYPE_MOTION",
	}
	RecordingType_value = map[string]int32{
		"RECORDING_TYPE_UNSPECIFIED":          0,
		"RECORDING_TYPE_OFF":                  1,
		"RECORDING_TYPE_CONTINUOUS":           2,
		"RECORDING_TYPE_CONTINUOUS_SCHEDULED": 3,
		"RECORDING_TYPE_MOTION":               4,
	}
)

func (x RecordingType) Enum() *RecordingType {
	p := new(RecordingType)
	*p = x
	return p
}

func (x RecordingType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RecordingType) Descriptor() protoreflect.EnumDescriptor {
	return file_msgs_proto_enumTypes[0].Descriptor()
}

func (RecordingType) Type() protoreflect.EnumType {
	return &file_msgs_proto_enumTypes[0]
}

func (x RecordingType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RecordingType.Descriptor instead.
func (RecordingType) EnumDescriptor() ([]byte, []int) {
	return file_msgs_proto_rawDescGZIP(), []int{0}
}

type Message struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	To    string                 `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	From  string                 `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	// Types that are valid to be assigned to DataType:
	//
	//	*Message_Webrtc
	//	*Message_Initalization
	//	*Message_Response
	//	*Message_HlsRequest
	//	*Message_HlsResponse
	//	*Message_RecordRequest
	//	*Message_RecordResponse
	//	*Message_UserConfig
	//	*Message_TriggerRefresh
	DataType      isMessage_DataType `protobuf_oneof:"data_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_msgs_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_msgs_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_msgs_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *Message) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *Message) GetDataType() isMessage_DataType {
	if x != nil {
		return x.DataType
	}
	return nil
}

func (x *Message) GetWebrtc() *Webrtc {
	if x != nil {
		if x, ok := x.DataType.(*Message_Webrtc); ok {
			return x.Webrtc
		}
	}
	return nil
}

func (x *Message) GetInitalization() *Initalization {
	if x != nil {
		if x, ok := x.DataType.(*Message_Initalization); ok {
			return x.Initalization
		}
	}
	return nil
}

func (x *Message) GetResponse() *Response {
	if x != nil {
		if x, ok := x.DataType.(*Message_Response); ok {
			return x.Response
		}
	}
	return nil
}

func (x *Message) GetHlsRequest() *HLSRequest {
	if x != nil {
		if x, ok := x.DataType.(*Message_HlsRequest); ok {
			return x.HlsRequest
		}
	}
	return nil
}

func (x *Message) GetHlsResponse() *HLSResponse {
	if x != nil {
		if x, ok := x.DataType.(*Message_HlsResponse); ok {
			return x.HlsResponse
		}
	}
	return nil
}

func (x *Message) GetRecordRequest() *RecordRequest {
	if x != nil {
		if x, ok := x.DataType.(*Message_RecordRequest); ok {
			return x.RecordRequest
		}
	}
	return nil
}

func (x *Message) GetRecordResponse() *RecordResponse {
	if x != nil {
		if x, ok := x.DataType.(*Message_RecordResponse); ok {
			return x.RecordResponse
		}
	}
	return nil
}

func (x *Message) GetUserConfig() *UserConfig {
	if x != nil {
		if x, ok := x.DataType.(*Message_UserConfig); ok {
			return x.UserConfig
		}
	}
	return nil
}

func (x *Message) GetTriggerRefresh() *TriggerRefresh {
	if x != nil {
		if x, ok := x.DataType.(*Message_TriggerRefresh); ok {
			return x.TriggerRefresh
		}
	}
	return nil
}

type isMessage_DataType interface {
	isMessage_DataType()
}

type Message_Webrtc struct {
	Webrtc *Webrtc `protobuf:"bytes,3,opt,name=webrtc,proto3,oneof"`
}

type Message_Initalization struct {
	Initalization *Initalization `protobuf:"bytes,4,opt,name=initalization,proto3,oneof"`
}

type Message_Response struct {
	Response *Response `protobuf:"bytes,5,opt,name=response,proto3,oneof"`
}

type Message_HlsRequest struct {
	HlsRequest *HLSRequest `protobuf:"bytes,6,opt,name=hls_request,json=hlsRequest,proto3,oneof"`
}

type Message_HlsResponse struct {
	HlsResponse *HLSResponse `protobuf:"bytes,7,opt,name=hls_response,json=hlsResponse,proto3,oneof"`
}

type Message_RecordRequest struct {
	RecordRequest *RecordRequest `protobuf:"bytes,8,opt,name=record_request,json=recordRequest,proto3,oneof"`
}

type Message_RecordResponse struct {
	RecordResponse *RecordResponse `protobuf:"bytes,9,opt,name=record_response,json=recordResponse,proto3,oneof"`
}

type Message_UserConfig struct {
	UserConfig *UserConfig `protobuf:"bytes,10,opt,name=user_config,json=userConfig,proto3,oneof"`
}

type Message_TriggerRefresh struct {
	TriggerRefresh *TriggerRefresh `protobuf:"bytes,11,opt,name=trigger_refresh,json=triggerRefresh,proto3,oneof"`
}

func (*Message_Webrtc) isMessage_DataType() {}

func (*Message_Initalization) isMessage_DataType() {}

func (*Message_Response) isMessage_DataType() {}

func (*Message_HlsRequest) isMessage_DataType() {}

func (*Message_HlsResponse) isMessage_DataType() {}

func (*Message_RecordRequest) isMessage_DataType() {}

func (*Message_RecordResponse) isMessage_DataType() {}

func (*Message_UserConfig) isMessage_DataType() {}

func (*Message_TriggerRefresh) isMessage_DataType() {}

type HLSRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileName      string                 `protobuf:"bytes,2,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HLSRequest) Reset() {
	*x = HLSRequest{}
	mi := &file_msgs_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HLSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HLSRequest) ProtoMessage() {}

func (x *HLSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_msgs_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HLSRequest.ProtoReflect.Descriptor instead.
func (*HLSRequest) Descriptor() ([]byte, []int) {
	return file_msgs_proto_rawDescGZIP(), []int{1}
}

func (x *HLSRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

type HLSResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileName      string                 `protobuf:"bytes,2,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HLSResponse) Reset() {
	*x = HLSResponse{}
	mi := &file_msgs_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HLSResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HLSResponse) ProtoMessage() {}

func (x *HLSResponse) ProtoReflect() protoreflect.Message {
	mi := &file_msgs_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HLSResponse.ProtoReflect.Descriptor instead.
func (*HLSResponse) Descriptor() ([]byte, []int) {
	return file_msgs_proto_rawDescGZIP(), []int{2}
}

func (x *HLSResponse) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *HLSResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type RecordRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	StartTime     int64                  `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       int64                  `protobuf:"varint,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecordRequest) Reset() {
	*x = RecordRequest{}
	mi := &file_msgs_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordRequest) ProtoMessage() {}

func (x *RecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_msgs_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordRequest.ProtoReflect.Descriptor instead.
func (*RecordRequest) Descriptor() ([]byte, []int) {
	return file_msgs_proto_rawDescGZIP(), []int{3}
}

func (x *RecordRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RecordRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *RecordRequest) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type VideoRange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartTime     int64                  `protobuf:"varint,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       int64                  `protobuf:"varint,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	FileName      string                 `protobuf:"bytes,3,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VideoRange) Reset() {
	*x = VideoRange{}
	mi := &file_msgs_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VideoRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoRange) ProtoMessage() {}

func (x *VideoRange) ProtoReflect() protoreflect.Message {
	mi := &file_msgs_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoRange.ProtoReflect.Descriptor instead.
func (*VideoRange) Descriptor() ([]byte, []int) {
	return file_msgs_proto_rawDescGZIP(), []int{4}
}

func (x *VideoRange) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *VideoRange) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *VideoRange) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

type RecordResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Records       []*VideoRange          `protobuf:"bytes,2,rep,name=records,proto3" json:"records,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecordResponse) Reset() {
	*x = RecordResponse{}
	mi := &file_msgs_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordResponse) ProtoMessage() {}

func (x *RecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_msgs_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordResponse.ProtoReflect.Descriptor instead.
func (*RecordResponse) Descriptor() ([]byte, []int) {
	return file_msgs_proto_rawDescGZIP(), []int{5}
}

func (x *RecordResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RecordResponse) GetRecords() []*VideoRange {
	if x != nil {
		return x.Records
	}
	return nil
}

type TriggerRefresh struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TriggerRefresh) Reset() {
	*x = TriggerRefresh{}
	mi := &file_msgs_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TriggerRefresh) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerRefresh) ProtoMessage() {}

func (x *TriggerRefresh) ProtoReflect() protoreflect.Message {
	mi := &file_msgs_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerRefresh.ProtoReflect.Descriptor instead.
func (*TriggerRefresh) Descriptor() ([]byte, []int) {
	return file_msgs_proto_rawDescGZIP(), []int{6}
}

type Webrtc struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StreamId      string                 `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Data          string                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Webrtc) Reset() {
	*x = Webrtc{}
	mi := &file_msgs_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Webrtc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Webrtc) ProtoMessage() {}

func (x *Webrtc) ProtoReflect() protoreflect.Message {
	mi := &file_msgs_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Webrtc.ProtoReflect.Descriptor instead.
func (*Webrtc) Descriptor() ([]byte, []int) {
	return file_msgs_proto_rawDescGZIP(), []int{7}
}

func (x *Webrtc) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *Webrtc) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type Initalization struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	IsUser        bool                   `protobuf:"varint,2,opt,name=is_user,json=isUser,proto3" json:"is_user,omitempty"`
	Token         string                 `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Initalization) Reset() {
	*x = Initalization{}
	mi := &file_msgs_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Initalization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Initalization) ProtoMessage() {}

func (x *Initalization) ProtoReflect() protoreflect.Message {
	mi := &file_msgs_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Initalization.ProtoReflect.Descriptor instead.
func (*Initalization) Descriptor() ([]byte, []int) {
	return file_msgs_proto_rawDescGZIP(), []int{8}
}

func (x *Initalization) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Initalization) GetIsUser() bool {
	if x != nil {
		return x.IsUser
	}
	return false
}

func (x *Initalization) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Response) Reset() {
	*x = Response{}
	mi := &file_msgs_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_msgs_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_msgs_proto_rawDescGZIP(), []int{9}
}

func (x *Response) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Response) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Schedule represents a time range for scheduled recording
type Schedule struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DaysOfWeek    []int32                `protobuf:"varint,1,rep,packed,name=days_of_week,json=daysOfWeek,proto3" json:"days_of_week,omitempty"` // Days of week (0-6, 0 is Sunday)
	StartTime     string                 `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`              // Format: "HH:MM" in 24-hour
	EndTime       string                 `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                    // Format: "HH:MM" in 24-hour
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Schedule) Reset() {
	*x = Schedule{}
	mi := &file_msgs_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Schedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schedule) ProtoMessage() {}

func (x *Schedule) ProtoReflect() protoreflect.Message {
	mi := &file_msgs_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Schedule.ProtoReflect.Descriptor instead.
func (*Schedule) Descriptor() ([]byte, []int) {
	return file_msgs_proto_rawDescGZIP(), []int{10}
}

func (x *Schedule) GetDaysOfWeek() []int32 {
	if x != nil {
		return x.DaysOfWeek
	}
	return nil
}

func (x *Schedule) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *Schedule) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

// MotionConfig holds configuration for motion detection recording
type MotionConfig struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Sensitivity       int32                  `protobuf:"varint,1,opt,name=sensitivity,proto3" json:"sensitivity,omitempty"`                                        // Motion detection sensitivity (1-100)
	PreRecordSeconds  int32                  `protobuf:"varint,2,opt,name=pre_record_seconds,json=preRecordSeconds,proto3" json:"pre_record_seconds,omitempty"`    // Seconds to record before motion detected
	PostRecordSeconds int32                  `protobuf:"varint,3,opt,name=post_record_seconds,json=postRecordSeconds,proto3" json:"post_record_seconds,omitempty"` // Seconds to continue recording after motion stops
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *MotionConfig) Reset() {
	*x = MotionConfig{}
	mi := &file_msgs_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MotionConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MotionConfig) ProtoMessage() {}

func (x *MotionConfig) ProtoReflect() protoreflect.Message {
	mi := &file_msgs_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MotionConfig.ProtoReflect.Descriptor instead.
func (*MotionConfig) Descriptor() ([]byte, []int) {
	return file_msgs_proto_rawDescGZIP(), []int{11}
}

func (x *MotionConfig) GetSensitivity() int32 {
	if x != nil {
		return x.Sensitivity
	}
	return 0
}

func (x *MotionConfig) GetPreRecordSeconds() int32 {
	if x != nil {
		return x.PreRecordSeconds
	}
	return 0
}

func (x *MotionConfig) GetPostRecordSeconds() int32 {
	if x != nil {
		return x.PostRecordSeconds
	}
	return 0
}

// UserConfig holds user configuration for camera recording settings
type UserConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RecordingType RecordingType          `protobuf:"varint,1,opt,name=recording_type,json=recordingType,proto3,enum=rover.RecordingType" json:"recording_type,omitempty"`
	Schedules     []*Schedule            `protobuf:"bytes,2,rep,name=schedules,proto3" json:"schedules,omitempty"`                           // Only used for RECORDING_TYPE_CONTINUOUS_SCHEDULED
	MotionConfig  *MotionConfig          `protobuf:"bytes,3,opt,name=motion_config,json=motionConfig,proto3" json:"motion_config,omitempty"` // Only used for RECORDING_TYPE_MOTION
	MotionEnabled bool                   `protobuf:"varint,4,opt,name=motion_enabled,json=motionEnabled,proto3" json:"motion_enabled,omitempty"`
	Name          string                 `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserConfig) Reset() {
	*x = UserConfig{}
	mi := &file_msgs_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserConfig) ProtoMessage() {}

func (x *UserConfig) ProtoReflect() protoreflect.Message {
	mi := &file_msgs_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserConfig.ProtoReflect.Descriptor instead.
func (*UserConfig) Descriptor() ([]byte, []int) {
	return file_msgs_proto_rawDescGZIP(), []int{12}
}

func (x *UserConfig) GetRecordingType() RecordingType {
	if x != nil {
		return x.RecordingType
	}
	return RecordingType_RECORDING_TYPE_UNSPECIFIED
}

func (x *UserConfig) GetSchedules() []*Schedule {
	if x != nil {
		return x.Schedules
	}
	return nil
}

func (x *UserConfig) GetMotionConfig() *MotionConfig {
	if x != nil {
		return x.MotionConfig
	}
	return nil
}

func (x *UserConfig) GetMotionEnabled() bool {
	if x != nil {
		return x.MotionEnabled
	}
	return false
}

func (x *UserConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Timestamp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Seconds       int64                  `protobuf:"varint,1,opt,name=seconds,proto3" json:"seconds,omitempty"`
	Nanos         int32                  `protobuf:"varint,2,opt,name=nanos,proto3" json:"nanos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Timestamp) Reset() {
	*x = Timestamp{}
	mi := &file_msgs_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Timestamp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timestamp) ProtoMessage() {}

func (x *Timestamp) ProtoReflect() protoreflect.Message {
	mi := &file_msgs_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timestamp.ProtoReflect.Descriptor instead.
func (*Timestamp) Descriptor() ([]byte, []int) {
	return file_msgs_proto_rawDescGZIP(), []int{13}
}

func (x *Timestamp) GetSeconds() int64 {
	if x != nil {
		return x.Seconds
	}
	return 0
}

func (x *Timestamp) GetNanos() int32 {
	if x != nil {
		return x.Nanos
	}
	return 0
}

var File_msgs_proto protoreflect.FileDescriptor

var file_msgs_proto_rawDesc = string([]byte{
	0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x72, 0x6f,
	0x76, 0x65, 0x72, 0x22, 0xb8, 0x04, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12,
	0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x12, 0x27, 0x0a, 0x06, 0x77, 0x65, 0x62, 0x72, 0x74, 0x63, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x57, 0x65, 0x62, 0x72,
	0x74, 0x63, 0x48, 0x00, 0x52, 0x06, 0x77, 0x65, 0x62, 0x72, 0x74, 0x63, 0x12, 0x3c, 0x0a, 0x0d,
	0x69, 0x6e, 0x69, 0x74, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x69, 0x74,
	0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0d, 0x69, 0x6e, 0x69,
	0x74, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x72,
	0x6f, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x0b, 0x68, 0x6c, 0x73,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x48, 0x4c, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x0a, 0x68, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x37, 0x0a, 0x0c, 0x68, 0x6c, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x48, 0x4c,
	0x53, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x68, 0x6c, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x0b, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x48, 0x00, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x40, 0x0a, 0x0f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x6f, 0x76, 0x65, 0x72,
	0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x48,
	0x00, 0x52, 0x0e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x42, 0x0b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x29,
	0x0a, 0x0a, 0x48, 0x4c, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3e, 0x0a, 0x0b, 0x48, 0x4c, 0x53,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x59, 0x0a, 0x0d, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x63, 0x0a, 0x0a, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x4d, 0x0a, 0x0e, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x07, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72,
	0x6f, 0x76, 0x65, 0x72, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x10, 0x0a, 0x0e, 0x54, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x22, 0x39, 0x0a, 0x06, 0x57, 0x65,
	0x62, 0x72, 0x74, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4e, 0x0a, 0x0d, 0x49, 0x6e, 0x69, 0x74, 0x61, 0x6c, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x3e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x66, 0x0a, 0x08, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x12, 0x20, 0x0a, 0x0c, 0x64, 0x61, 0x79, 0x73, 0x5f, 0x6f, 0x66, 0x5f, 0x77, 0x65, 0x65,
	0x6b, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x61, 0x79, 0x73, 0x4f, 0x66, 0x57,
	0x65, 0x65, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x8e, 0x01,
	0x0a, 0x0c, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x20,
	0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x12, 0x2c, 0x0a, 0x12, 0x70, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x70, 0x72,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x2e,
	0x0a, 0x13, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x70, 0x6f, 0x73,
	0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0xed,
	0x01, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3b, 0x0a,
	0x0e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2d, 0x0a, 0x09, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x72, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x09,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x0d, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0c, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3b,
	0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6e, 0x6f, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6e, 0x61, 0x6e, 0x6f, 0x73, 0x2a, 0xaa, 0x01, 0x0a, 0x0d,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a,
	0x1a, 0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a,
	0x12, 0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x4f, 0x46, 0x46, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x49,
	0x4e, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x49, 0x4e, 0x55, 0x4f,
	0x55, 0x53, 0x10, 0x02, 0x12, 0x27, 0x0a, 0x23, 0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x49, 0x4e,
	0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x49, 0x4e, 0x55, 0x4f, 0x55,
	0x53, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x12, 0x19, 0x0a,
	0x15, 0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x4d, 0x4f, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x04, 0x42, 0x11, 0x5a, 0x0f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2f, 0x6d, 0x73, 0x67, 0x73, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
})

var (
	file_msgs_proto_rawDescOnce sync.Once
	file_msgs_proto_rawDescData []byte
)

func file_msgs_proto_rawDescGZIP() []byte {
	file_msgs_proto_rawDescOnce.Do(func() {
		file_msgs_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_msgs_proto_rawDesc), len(file_msgs_proto_rawDesc)))
	})
	return file_msgs_proto_rawDescData
}

var file_msgs_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_msgs_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_msgs_proto_goTypes = []any{
	(RecordingType)(0),     // 0: rover.RecordingType
	(*Message)(nil),        // 1: rover.Message
	(*HLSRequest)(nil),     // 2: rover.HLSRequest
	(*HLSResponse)(nil),    // 3: rover.HLSResponse
	(*RecordRequest)(nil),  // 4: rover.RecordRequest
	(*VideoRange)(nil),     // 5: rover.VideoRange
	(*RecordResponse)(nil), // 6: rover.RecordResponse
	(*TriggerRefresh)(nil), // 7: rover.TriggerRefresh
	(*Webrtc)(nil),         // 8: rover.Webrtc
	(*Initalization)(nil),  // 9: rover.Initalization
	(*Response)(nil),       // 10: rover.Response
	(*Schedule)(nil),       // 11: rover.Schedule
	(*MotionConfig)(nil),   // 12: rover.MotionConfig
	(*UserConfig)(nil),     // 13: rover.UserConfig
	(*Timestamp)(nil),      // 14: rover.Timestamp
}
var file_msgs_proto_depIdxs = []int32{
	8,  // 0: rover.Message.webrtc:type_name -> rover.Webrtc
	9,  // 1: rover.Message.initalization:type_name -> rover.Initalization
	10, // 2: rover.Message.response:type_name -> rover.Response
	2,  // 3: rover.Message.hls_request:type_name -> rover.HLSRequest
	3,  // 4: rover.Message.hls_response:type_name -> rover.HLSResponse
	4,  // 5: rover.Message.record_request:type_name -> rover.RecordRequest
	6,  // 6: rover.Message.record_response:type_name -> rover.RecordResponse
	13, // 7: rover.Message.user_config:type_name -> rover.UserConfig
	7,  // 8: rover.Message.trigger_refresh:type_name -> rover.TriggerRefresh
	5,  // 9: rover.RecordResponse.records:type_name -> rover.VideoRange
	0,  // 10: rover.UserConfig.recording_type:type_name -> rover.RecordingType
	11, // 11: rover.UserConfig.schedules:type_name -> rover.Schedule
	12, // 12: rover.UserConfig.motion_config:type_name -> rover.MotionConfig
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_msgs_proto_init() }
func file_msgs_proto_init() {
	if File_msgs_proto != nil {
		return
	}
	file_msgs_proto_msgTypes[0].OneofWrappers = []any{
		(*Message_Webrtc)(nil),
		(*Message_Initalization)(nil),
		(*Message_Response)(nil),
		(*Message_HlsRequest)(nil),
		(*Message_HlsResponse)(nil),
		(*Message_RecordRequest)(nil),
		(*Message_RecordResponse)(nil),
		(*Message_UserConfig)(nil),
		(*Message_TriggerRefresh)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_msgs_proto_rawDesc), len(file_msgs_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_msgs_proto_goTypes,
		DependencyIndexes: file_msgs_proto_depIdxs,
		EnumInfos:         file_msgs_proto_enumTypes,
		MessageInfos:      file_msgs_proto_msgTypes,
	}.Build()
	File_msgs_proto = out.File
	file_msgs_proto_goTypes = nil
	file_msgs_proto_depIdxs = nil
}
